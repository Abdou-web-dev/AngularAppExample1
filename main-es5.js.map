{
  "version": 3,
  "sources": ["webpack:///./$_lazy_route_resource lazy namespace object", "webpack:///./src/app/app.component.html", "webpack:///./src/app/payme/payme.component.html", "webpack:///./src/app/app.component.css", "webpack:///./src/app/app.component.ts", "webpack:///./src/app/app.module.ts", "webpack:///./src/app/payme/payme.component.css", "webpack:///./src/app/payme/payme.component.ts", "webpack:///./src/environments/environment.ts", "webpack:///./src/main.ts"],
  "names": [],
  "mappings": "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",
  "file": "main-es5.js",
  "sourcesContent": ["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";", "module.exports = \"<app-payme></app-payme>\"", "module.exports = \"<div *ngIf=\\\"!paidFor\\\">\\n\\n  <h1>Buy this Couch - ${{ product.price }} OBO</h1>\\n\\n  <p>{{ product.description }}</p>\\n\\n  <img width=\\\"400\\\" [src]=\\\"product.img\\\">\\n\\n</div>\\n\\n<div *ngIf=paidFor>\\n  <h1>Yay, you bought a sweet couch!</h1>\\n\\n  <img src=\\\"assets/giphy.gif\\\">\\n</div>\\n\\n\\n<div [hidden]=\\\"paidFor\\\" #paypal></div>\"", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"", "import { Component } from '@angular/core';\n\ndeclare var paypal;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n  \n\n\n}\n", "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PaymeComponent } from './payme/payme.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PaymeComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lL3BheW1lLmNvbXBvbmVudC5jc3MifQ== */\"", "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\ndeclare var paypal;\n\n@Component({\n  selector: 'app-payme',\n  templateUrl: './payme.component.html',\n  styleUrls: ['./payme.component.css']\n})\nexport class PaymeComponent implements OnInit {\n  @ViewChild('paypal', { static: true }) paypalElement: ElementRef;\n\n  product = {\n    price: 777.77,\n    description: 'used couch, decent condition',\n    img: 'assets/couch.jpg'\n  };\n\n  paidFor = false;\n\n  ngOnInit() {\n    paypal\n      .Buttons({\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            purchase_units: [\n              {\n                description: this.product.description,\n                amount: {\n                  currency_code: 'USD',\n                  value: this.product.price\n                }\n              }\n            ]\n          });\n        },\n        onApprove: async (data, actions) => {\n          const order = await actions.order.capture();\n          this.paidFor = true;\n          console.log(order);\n        },\n        onError: err => {\n          console.log(err);\n        }\n      })\n      .render(this.paypalElement.nativeElement);\n  }\n}\n", "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n", "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],
  "sourceRoot": ""
}
